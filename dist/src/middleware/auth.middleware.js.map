{"version":3,"sources":["../../../src/middleware/auth.middleware.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport jwt from 'jsonwebtoken';\nimport { JWT_SECRET } from '../config/constants';\nimport { AppError } from '../utils/AppError';\nimport { asyncHandler } from '../utils/asyncHandler';\nimport UserModel from '../models/user.model';\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      user?: any;\n    }\n  }\n}\n\n/**\n * Middleware to protect routes - requires valid JWT token\n */\nexport const protect = asyncHandler(async (req: Request, res: Response, next: NextFunction) => {\n  let token: string | undefined;\n\n  // Check for token in Authorization header\n  if (req.headers.authorization && req.headers.authorization.startsWith('Bearer')) {\n    token = req.headers.authorization.split(' ')[1];\n  } \n  // Check for token in cookies\n  else if (req.cookies?.token) {\n    token = req.cookies.token;\n  }\n\n  if (!token) {\n    throw new AppError('You are not logged in. Please log in to access this resource', 401);\n  }\n\n  try {\n    // Verify token\n    const decoded = jwt.verify(token, JWT_SECRET) as any;\n\n    // Check if user still exists\n    const user = await UserModel.findById(decoded.id);\n    if (!user) {\n      throw new AppError('The user belonging to this token no longer exists', 401);\n    }\n\n    // Grant access to protected route\n    req.user = user;\n    next();\n  } catch (error) {\n    throw new AppError('Invalid token. Please log in again', 401);\n  }\n});\n\n/**\n * Middleware to restrict access to specific roles\n */\nexport const restrictTo = (...roles: string[]) => {\n  return (req: Request, res: Response, next: NextFunction) => {\n    if (!req.user) {\n      throw new AppError('You must be logged in to access this resource', 401);\n    }\n\n    if (!roles.includes(req.user.role)) {\n      throw new AppError('You do not have permission to perform this action', 403);\n    }\n\n    next();\n  };\n};\n\n/**\n * Optional auth middleware - attaches user if token exists but doesn't require it\n */\nexport const optionalAuth = asyncHandler(async (req: Request, res: Response, next: NextFunction) => {\n  let token: string | undefined;\n\n  // Check for token in Authorization header\n  if (req.headers.authorization && req.headers.authorization.startsWith('Bearer')) {\n    token = req.headers.authorization.split(' ')[1];\n  } \n  // Check for token in cookies\n  else if (req.cookies?.token) {\n    token = req.cookies.token;\n  }\n\n  if (token) {\n    try {\n      // Verify token\n      const decoded = jwt.verify(token, JWT_SECRET) as any;\n\n      // Check if user still exists\n      const user = await UserModel.findById(decoded.id);\n      if (user) {\n        req.user = user;\n      }\n    } catch (error) {\n      // Invalid token, but continue without user\n    }\n  }\n\n  next();\n});"],"names":["optionalAuth","protect","restrictTo","asyncHandler","req","res","next","token","headers","authorization","startsWith","split","cookies","AppError","decoded","jwt","verify","JWT_SECRET","user","UserModel","findById","id","error","roles","includes","role"],"mappings":";;;;;;;;;;;QAwEaA;eAAAA;;QAtDAC;eAAAA;;QAqCAC;eAAAA;;;qEAtDG;2BACW;0BACF;8BACI;kEACP;;;;;;AAaf,MAAMD,UAAUE,IAAAA,0BAAY,EAAC,OAAOC,KAAcC,KAAeC;IACtE,IAAIC;IAEJ,0CAA0C;IAC1C,IAAIH,IAAII,OAAO,CAACC,aAAa,IAAIL,IAAII,OAAO,CAACC,aAAa,CAACC,UAAU,CAAC,WAAW;QAC/EH,QAAQH,IAAII,OAAO,CAACC,aAAa,CAACE,KAAK,CAAC,IAAI,CAAC,EAAE;IACjD,OAEK,IAAIP,IAAIQ,OAAO,EAAEL,OAAO;QAC3BA,QAAQH,IAAIQ,OAAO,CAACL,KAAK;IAC3B;IAEA,IAAI,CAACA,OAAO;QACV,MAAM,IAAIM,kBAAQ,CAAC,gEAAgE;IACrF;IAEA,IAAI;QACF,eAAe;QACf,MAAMC,UAAUC,qBAAG,CAACC,MAAM,CAACT,OAAOU,qBAAU;QAE5C,6BAA6B;QAC7B,MAAMC,OAAO,MAAMC,kBAAS,CAACC,QAAQ,CAACN,QAAQO,EAAE;QAChD,IAAI,CAACH,MAAM;YACT,MAAM,IAAIL,kBAAQ,CAAC,qDAAqD;QAC1E;QAEA,kCAAkC;QAClCT,IAAIc,IAAI,GAAGA;QACXZ;IACF,EAAE,OAAOgB,OAAO;QACd,MAAM,IAAIT,kBAAQ,CAAC,sCAAsC;IAC3D;AACF;AAKO,MAAMX,aAAa,CAAC,GAAGqB;IAC5B,OAAO,CAACnB,KAAcC,KAAeC;QACnC,IAAI,CAACF,IAAIc,IAAI,EAAE;YACb,MAAM,IAAIL,kBAAQ,CAAC,iDAAiD;QACtE;QAEA,IAAI,CAACU,MAAMC,QAAQ,CAACpB,IAAIc,IAAI,CAACO,IAAI,GAAG;YAClC,MAAM,IAAIZ,kBAAQ,CAAC,qDAAqD;QAC1E;QAEAP;IACF;AACF;AAKO,MAAMN,eAAeG,IAAAA,0BAAY,EAAC,OAAOC,KAAcC,KAAeC;IAC3E,IAAIC;IAEJ,0CAA0C;IAC1C,IAAIH,IAAII,OAAO,CAACC,aAAa,IAAIL,IAAII,OAAO,CAACC,aAAa,CAACC,UAAU,CAAC,WAAW;QAC/EH,QAAQH,IAAII,OAAO,CAACC,aAAa,CAACE,KAAK,CAAC,IAAI,CAAC,EAAE;IACjD,OAEK,IAAIP,IAAIQ,OAAO,EAAEL,OAAO;QAC3BA,QAAQH,IAAIQ,OAAO,CAACL,KAAK;IAC3B;IAEA,IAAIA,OAAO;QACT,IAAI;YACF,eAAe;YACf,MAAMO,UAAUC,qBAAG,CAACC,MAAM,CAACT,OAAOU,qBAAU;YAE5C,6BAA6B;YAC7B,MAAMC,OAAO,MAAMC,kBAAS,CAACC,QAAQ,CAACN,QAAQO,EAAE;YAChD,IAAIH,MAAM;gBACRd,IAAIc,IAAI,GAAGA;YACb;QACF,EAAE,OAAOI,OAAO;QACd,2CAA2C;QAC7C;IACF;IAEAhB;AACF"}