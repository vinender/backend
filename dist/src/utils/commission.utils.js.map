{"version":3,"sources":["../../../src/utils/commission.utils.ts"],"sourcesContent":["import prisma from '../config/database';\n\n/**\n * Get the effective commission rate for a field owner\n * Returns the custom rate if set, otherwise the system default\n */\nexport async function getEffectiveCommissionRate(userId: string): Promise<number> {\n  try {\n    // Get the field owner's custom commission rate\n    const user = await prisma.user.findUnique({\n      where: { id: userId },\n      select: { commissionRate: true }\n    });\n\n    // If user has a custom rate, use it\n    if (user?.commissionRate !== null && user?.commissionRate !== undefined) {\n      return user.commissionRate;\n    }\n\n    // Otherwise, get the system default\n    const settings = await prisma.systemSettings.findFirst();\n    \n    // Return the default rate or 20% if no settings exist\n    return settings?.defaultCommissionRate || 20;\n  } catch (error) {\n    console.error('Error getting commission rate:', error);\n    // Return default 20% on error\n    return 20;\n  }\n}\n\n/**\n * Calculate field owner amount and platform fee based on commission rate\n */\nexport async function calculatePayoutAmounts(\n  totalAmount: number, \n  fieldOwnerId: string\n): Promise<{ fieldOwnerAmount: number; platformFeeAmount: number; commissionRate: number }> {\n  const commissionRate = await getEffectiveCommissionRate(fieldOwnerId);\n  \n  // Platform gets the commission percentage\n  const platformFeeAmount = (totalAmount * commissionRate) / 100;\n  \n  // Field owner gets the remaining amount\n  const fieldOwnerAmount = totalAmount - platformFeeAmount;\n  \n  return {\n    fieldOwnerAmount,\n    platformFeeAmount,\n    commissionRate\n  };\n}"],"names":["calculatePayoutAmounts","getEffectiveCommissionRate","userId","user","prisma","findUnique","where","id","select","commissionRate","undefined","settings","systemSettings","findFirst","defaultCommissionRate","error","console","totalAmount","fieldOwnerId","platformFeeAmount","fieldOwnerAmount"],"mappings":";;;;;;;;;;;QAkCsBA;eAAAA;;QA5BAC;eAAAA;;;iEANH;;;;;;AAMZ,eAAeA,2BAA2BC,MAAc;IAC7D,IAAI;QACF,+CAA+C;QAC/C,MAAMC,OAAO,MAAMC,iBAAM,CAACD,IAAI,CAACE,UAAU,CAAC;YACxCC,OAAO;gBAAEC,IAAIL;YAAO;YACpBM,QAAQ;gBAAEC,gBAAgB;YAAK;QACjC;QAEA,oCAAoC;QACpC,IAAIN,MAAMM,mBAAmB,QAAQN,MAAMM,mBAAmBC,WAAW;YACvE,OAAOP,KAAKM,cAAc;QAC5B;QAEA,oCAAoC;QACpC,MAAME,WAAW,MAAMP,iBAAM,CAACQ,cAAc,CAACC,SAAS;QAEtD,sDAAsD;QACtD,OAAOF,UAAUG,yBAAyB;IAC5C,EAAE,OAAOC,OAAO;QACdC,QAAQD,KAAK,CAAC,kCAAkCA;QAChD,8BAA8B;QAC9B,OAAO;IACT;AACF;AAKO,eAAef,uBACpBiB,WAAmB,EACnBC,YAAoB;IAEpB,MAAMT,iBAAiB,MAAMR,2BAA2BiB;IAExD,0CAA0C;IAC1C,MAAMC,oBAAoB,AAACF,cAAcR,iBAAkB;IAE3D,wCAAwC;IACxC,MAAMW,mBAAmBH,cAAcE;IAEvC,OAAO;QACLC;QACAD;QACAV;IACF;AACF"}