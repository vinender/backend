{"version":3,"sources":["../../../src/utils/asyncHandler.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\n\n/**\n * Async handler wrapper to avoid try-catch blocks in controllers\n * Catches errors in async functions and passes them to Express error handler\n */\nexport const asyncHandler = (fn: Function) => {\n  return (req: Request, res: Response, next: NextFunction) => {\n    Promise.resolve(fn(req, res, next)).catch(next);\n  };\n};"],"names":["asyncHandler","fn","req","res","next","Promise","resolve","catch"],"mappings":";;;;+BAMaA;;;eAAAA;;;AAAN,MAAMA,eAAe,CAACC;IAC3B,OAAO,CAACC,KAAcC,KAAeC;QACnCC,QAAQC,OAAO,CAACL,GAAGC,KAAKC,KAAKC,OAAOG,KAAK,CAACH;IAC5C;AACF"}