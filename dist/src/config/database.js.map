{"version":3,"sources":["../../../src/config/database.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\n\n// Create a single instance of PrismaClient\nconst prisma = new PrismaClient({\n  log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],\n});\n\n// Handle connection events\nprisma.$connect()\n  .then(() => {\n    console.log('✅ MongoDB connected successfully');\n  })\n  .catch((error) => {\n    console.error('❌ MongoDB connection failed:', error);\n    console.log('📌 Make sure MongoDB is running:');\n    console.log('   - For local MongoDB: mongod or brew services start mongodb-community');\n    console.log('   - For MongoDB Atlas: Check your connection string and network access');\n    process.exit(1);\n  });\n\n// Graceful shutdown\nprocess.on('beforeExit', async () => {\n  await prisma.$disconnect();\n});\n\nexport default prisma;"],"names":["prisma","PrismaClient","log","process","env","NODE_ENV","$connect","then","console","catch","error","exit","on","$disconnect"],"mappings":";;;;+BAyBA;;;eAAA;;;wBAzB6B;AAE7B,2CAA2C;AAC3C,MAAMA,SAAS,IAAIC,oBAAY,CAAC;IAC9BC,KAAKC,QAAQC,GAAG,CAACC,QAAQ,KAAK,gBAAgB;QAAC;QAAS;QAAS;KAAO,GAAG;QAAC;KAAQ;AACtF;AAEA,2BAA2B;AAC3BL,OAAOM,QAAQ,GACZC,IAAI,CAAC;IACJC,QAAQN,GAAG,CAAC;AACd,GACCO,KAAK,CAAC,CAACC;IACNF,QAAQE,KAAK,CAAC,gCAAgCA;IAC9CF,QAAQN,GAAG,CAAC;IACZM,QAAQN,GAAG,CAAC;IACZM,QAAQN,GAAG,CAAC;IACZC,QAAQQ,IAAI,CAAC;AACf;AAEF,oBAAoB;AACpBR,QAAQS,EAAE,CAAC,cAAc;IACvB,MAAMZ,OAAOa,WAAW;AAC1B;MAEA,WAAeb"}