{"version":3,"sources":["../../../src/routes/booking.routes.ts"],"sourcesContent":["import { Router } from 'express';\nimport bookingController from '../controllers/booking.controller';\nimport { protect, restrictTo } from '../middleware/auth.middleware';\n\nconst router = Router();\n\n// Public routes to check availability\nrouter.get('/availability', bookingController.checkAvailability);\nrouter.get('/fields/:fieldId/slot-availability', bookingController.getSlotAvailability);\n\n// All routes below require authentication\nrouter.use(protect);\n\n// Dog owner and field owner routes\nrouter.get('/my-bookings', bookingController.getMyBookings);\nrouter.get('/my-recurring', bookingController.getMyRecurringBookings);\nrouter.get('/stats', bookingController.getBookingStats);\nrouter.post('/', bookingController.createBooking);\nrouter.post('/:id/cancel-recurring', bookingController.cancelRecurringBooking);\n\n// Admin routes\nrouter.get('/', restrictTo('ADMIN'), bookingController.getAllBookings);\nrouter.post('/mark-completed', restrictTo('ADMIN'), bookingController.markPastBookingsAsCompleted);\n\n// Booking specific routes\nrouter\n  .route('/:id')\n  .get(bookingController.getBooking)\n  .patch(bookingController.updateBooking)\n  .delete(restrictTo('ADMIN'), bookingController.deleteBooking);\n\n// Booking status management\nrouter.patch('/:id/status', bookingController.updateBookingStatus);\nrouter.get('/:id/refund-eligibility', bookingController.checkRefundEligibility);\nrouter.patch('/:id/cancel', bookingController.cancelBooking);\n\nexport default router;"],"names":["router","Router","get","bookingController","checkAvailability","getSlotAvailability","use","protect","getMyBookings","getMyRecurringBookings","getBookingStats","post","createBooking","cancelRecurringBooking","restrictTo","getAllBookings","markPastBookingsAsCompleted","route","getBooking","patch","updateBooking","delete","deleteBooking","updateBookingStatus","checkRefundEligibility","cancelBooking"],"mappings":";;;;+BAoCA;;;eAAA;;;yBApCuB;0EACO;gCACM;;;;;;AAEpC,MAAMA,SAASC,IAAAA,eAAM;AAErB,sCAAsC;AACtCD,OAAOE,GAAG,CAAC,iBAAiBC,0BAAiB,CAACC,iBAAiB;AAC/DJ,OAAOE,GAAG,CAAC,sCAAsCC,0BAAiB,CAACE,mBAAmB;AAEtF,0CAA0C;AAC1CL,OAAOM,GAAG,CAACC,uBAAO;AAElB,mCAAmC;AACnCP,OAAOE,GAAG,CAAC,gBAAgBC,0BAAiB,CAACK,aAAa;AAC1DR,OAAOE,GAAG,CAAC,iBAAiBC,0BAAiB,CAACM,sBAAsB;AACpET,OAAOE,GAAG,CAAC,UAAUC,0BAAiB,CAACO,eAAe;AACtDV,OAAOW,IAAI,CAAC,KAAKR,0BAAiB,CAACS,aAAa;AAChDZ,OAAOW,IAAI,CAAC,yBAAyBR,0BAAiB,CAACU,sBAAsB;AAE7E,eAAe;AACfb,OAAOE,GAAG,CAAC,KAAKY,IAAAA,0BAAU,EAAC,UAAUX,0BAAiB,CAACY,cAAc;AACrEf,OAAOW,IAAI,CAAC,mBAAmBG,IAAAA,0BAAU,EAAC,UAAUX,0BAAiB,CAACa,2BAA2B;AAEjG,0BAA0B;AAC1BhB,OACGiB,KAAK,CAAC,QACNf,GAAG,CAACC,0BAAiB,CAACe,UAAU,EAChCC,KAAK,CAAChB,0BAAiB,CAACiB,aAAa,EACrCC,MAAM,CAACP,IAAAA,0BAAU,EAAC,UAAUX,0BAAiB,CAACmB,aAAa;AAE9D,4BAA4B;AAC5BtB,OAAOmB,KAAK,CAAC,eAAehB,0BAAiB,CAACoB,mBAAmB;AACjEvB,OAAOE,GAAG,CAAC,2BAA2BC,0BAAiB,CAACqB,sBAAsB;AAC9ExB,OAAOmB,KAAK,CAAC,eAAehB,0BAAiB,CAACsB,aAAa;MAE3D,WAAezB"}