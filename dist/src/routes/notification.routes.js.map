{"version":3,"sources":["../../../src/routes/notification.routes.ts"],"sourcesContent":["import { Router } from 'express';\nimport { notificationController } from '../controllers/notification.controller';\nimport { protect } from '../middleware/auth.middleware';\n\nconst router = Router();\n\n// All routes require authentication\nrouter.use(protect);\n\n// Get user notifications\nrouter.get('/', notificationController.getUserNotifications);\n\n// Get unread notification count\nrouter.get('/unread-count', notificationController.getUnreadCount);\n\n// Mark notification as read\nrouter.patch('/:id/read', notificationController.markAsRead);\n\n// Mark all notifications as read\nrouter.patch('/read-all', notificationController.markAllAsRead);\n\n// Delete a notification\nrouter.delete('/:id', notificationController.deleteNotification);\n\n// Clear all notifications\nrouter.delete('/clear-all', notificationController.clearAllNotifications);\n\nexport default router;"],"names":["router","Router","use","protect","get","notificationController","getUserNotifications","getUnreadCount","patch","markAsRead","markAllAsRead","delete","deleteNotification","clearAllNotifications"],"mappings":";;;;+BA2BA;;;eAAA;;;yBA3BuB;wCACgB;gCACf;AAExB,MAAMA,SAASC,IAAAA,eAAM;AAErB,oCAAoC;AACpCD,OAAOE,GAAG,CAACC,uBAAO;AAElB,yBAAyB;AACzBH,OAAOI,GAAG,CAAC,KAAKC,8CAAsB,CAACC,oBAAoB;AAE3D,gCAAgC;AAChCN,OAAOI,GAAG,CAAC,iBAAiBC,8CAAsB,CAACE,cAAc;AAEjE,4BAA4B;AAC5BP,OAAOQ,KAAK,CAAC,aAAaH,8CAAsB,CAACI,UAAU;AAE3D,iCAAiC;AACjCT,OAAOQ,KAAK,CAAC,aAAaH,8CAAsB,CAACK,aAAa;AAE9D,wBAAwB;AACxBV,OAAOW,MAAM,CAAC,QAAQN,8CAAsB,CAACO,kBAAkB;AAE/D,0BAA0B;AAC1BZ,OAAOW,MAAM,CAAC,cAAcN,8CAAsB,CAACQ,qBAAqB;MAExE,WAAeb"}